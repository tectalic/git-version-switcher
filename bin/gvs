#!/usr/bin/env bash

VERSION=1.4.0
VERBOSE_OUTPUT=false
DO_CHECKOUT=true
DO_UPDATE=false
REPOSITORIES=()
WP_TEST_CONFIG=""
CWD=$PWD
NC="\033[0m"
YELLOW="\033[0;33m"
GREEN="\033[0;32m"
CYAN="\033[0;36m"

function echo_usage_info() {
  echo "git version switcher: Checkout specific branch|commit|tag on targets"
  echo
  echo "Usage: $(basename "$0") [-h] [-u] [-r] [-v] <TARGET1> [TARGET2â€¦]"
  echo "   -h | --help          Display this help message"
  echo "   -u | --update        Update default remote (fetch)"
  echo "   -r | --report-only   Discard version switching, only report"
  echo "   -v | --verbose       Verbose output"
  echo "   -V | --version       Display version"
  echo "   TARGET               A path and a branch|commit|tag separated by a colon (:)"
}

function verbose_only_echo() {
  if $VERBOSE_OUTPUT; then
    echo "$@"
  fi
}

function get_phpunit_version() {
  if [ -f "$CWD/vendor/bin/phpunit" ]; then
    PU=$("$CWD/vendor/bin/phpunit" --version | awk '{print $2}')
  elif command -v phpunit >/dev/null; then
    PU=$("phpunit" --version | awk '{print $2}')
  else
    PU="N/A"
  fi
  echo "$PU"
}

function echo_environment_info() {
  PHP_V=$(php -r "echo PHP_VERSION, \"\n\";")
  if php -v | grep -qi "xdebug"; then XD=enabled; else XD=disabled; fi
  PU=$(get_phpunit_version)
  echo -e "${GREEN}PHP: $YELLOW$PHP_V, ${GREEN}Xdebug: $YELLOW$XD, ${GREEN}PHPUnit: $YELLOW$PU$NC"
}

function collect_wp_test_config() {
  if [ -f "wp-tests-config.php" ]; then
    echo "Collect wp-tests-config.php."
    WP_TEST_CONFIG=$(cat wp-tests-config.php)
  fi
}

function restore_wp_test_config() {
  if [ ! ${#WP_TEST_CONFIG} -eq 0 ]; then
    echo "Restore wp-tests-config.php."
    echo "$WP_TEST_CONFIG" >wp-tests-config.php
    WP_TEST_CONFIG=""
  fi
}

function composer_install() {
  # Directories to look for a composer.json file in.
  if [ -f "$REPO_PATH/composer.json" ]; then
    COMPOSER_DIR=$REPO_PATH
  elif [ -f "$REPO_PATH/plugins/woocommerce/composer.json" ]; then
    COMPOSER_DIR=$REPO_PATH/plugins/woocommerce
  else
    verbose_only_echo "No composer.json found in $REPO_PATH"
    verbose_only_echo "No composer install needed."
    return
  fi

  cd "$COMPOSER_DIR" || exit 1
  verbose_only_echo "$COMPOSER_DIR/composer.json exists."

  if [ -d "vendor" ]; then
    verbose_only_echo "$COMPOSER_DIR/vendor is committed to git."
    verbose_only_echo "No composer install needed."
    return
  fi

  verbose_only_echo "Install composer packages to $(pwd)"

  if ! composer install --no-interaction --no-dev --quiet; then
    verbose_only_echo "Composer install failed. Retrying with \`--ignore-platform-reqs.\`"
    composer install --no-interaction --no-dev --quiet --ignore-platform-reqs
    verbose_only_echo "Alternative composer install completed."
  fi

  verbose_only_echo "Composer install completed."
}

if [ $# -lt 1 ]; then
  echo Arguments missing!
  echo_usage_info
  exit 1
fi

while [ -n "$1" ]; do
  case "$1" in
  --verbose | -v)
    VERBOSE_OUTPUT=true
    ;;
  --update | -u)
    DO_UPDATE=true
    ;;
  --report-only | -r)
    DO_CHECKOUT=false
    ;;
  --help | -h)
    echo_usage_info
    exit
    ;;
  --version | -V)
    echo "git version switcher: $(basename "$0") v$VERSION"
    exit
    ;;
  *)
    REPOSITORIES+=("$1")
    ;;
  esac
  shift
done

if [ ${#REPOSITORIES[@]} -ne 0 ]; then
  for REPO in "${REPOSITORIES[@]}"; do
    # Split param
    REPO_PATH=$(echo "$REPO" | cut -f1 -d':')
    REPO_TARGET=$(echo "$REPO" | cut -f2 -d':')

    # Test path
    if [ ! -d "$REPO_PATH" ]; then
      echo "Target path ($REPO_PATH) not exists. Aborting"
      exit 1
    fi

    cd "$REPO_PATH" || exit 1

    # Update (fetch)
    if $DO_UPDATE; then
      verbose_only_echo "Update from remote (fetch) for $(pwd)"
      git fetch --tags --force
    fi

    # Checkout
    if $DO_CHECKOUT; then
      # Temporary store wp-tests-config.php content
      collect_wp_test_config

      # Reset to clean state.
      # See: https://stackoverflow.com/a/1090316
      git reset --hard
      git clean -fxd

      # Restore wp-tests-config.php if previously stored.
      restore_wp_test_config

      # Checkout target
      git checkout --force --quiet "$REPO_TARGET"

      composer_install
    fi

    # Report target
    REPO_HEAD=$(git describe --tags --always)
    echo -e "$CYAN$(pwd): $YELLOW$REPO_HEAD$NC "
  done
fi

if $VERBOSE_OUTPUT; then
  echo_environment_info
fi
